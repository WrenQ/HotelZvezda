<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
        <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" username-parameter="j_username" password-parameter="j_password"/>
        <logout logout-url="/resources/j_spring_security_logout" />
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/hotels/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/rooms/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/categorys/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/bookings/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/usuarios/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/userroles/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/member/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/login/**" access="permitAll" />
        <intercept-url pattern="/**" access="isAuthenticated()" />
    </http>
    <!-- Configure Authentication mechanism -->
    <authentication-manager alias="authenticationManager">
        <!-- SHA-256 values can be produced using 'echo -n your_desired_password | sha256sum' (using normal *nix environments) -->
        <authentication-provider>
            <password-encoder hash="sha-256" />
                <jdbc-user-service data-source-ref="dataSource"
                  users-by-username-query="SELECT u_userName AS username, u_password AS password, u_enabled AS enabled
                  FROM usuario where u_userName=?"
                  authorities-by-username-query="SELECT U.u_username AS username, UR.role_name AS authority
					FROM usuario U
					left join usuario_u_roles R
					on U.id=R.usuario
					left join user_role UR
					on R.u_roles=UR.id
					WHERE U.u_username=?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>